// <auto-generated />
using System;
using AvgApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AvgApi.Migrations
{
    [DbContext(typeof(AvgContext))]
    [Migration("20220515144254_add-professor")]
    partial class addprofessor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvgApi.Models.CategoriaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescCategoria")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescCategoria = "Celular"
                        },
                        new
                        {
                            Id = 2,
                            DescCategoria = "Televisão"
                        },
                        new
                        {
                            Id = 3,
                            DescCategoria = "Notebook"
                        },
                        new
                        {
                            Id = 14,
                            DescCategoria = "Pc Gamer"
                        });
                });

            modelBuilder.Entity("AvgApi.Models.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDespesa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoExtra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDespesaId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorExtra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TipoDespesaId");

                    b.ToTable("Despesa");
                });

            modelBuilder.Entity("AvgApi.Models.Investimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoInvestimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cotas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInvestimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoExtra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DividendosAcoes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DividenteYield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoInvestimentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorExtra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TipoInvestimentoId");

                    b.ToTable("Investimento");
                });

            modelBuilder.Entity("AvgApi.Models.PessoaFisica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PessoaFisica");
                });

            modelBuilder.Entity("AvgApi.Models.ProdutoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaModelId")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DscProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<string>("InfoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoriaProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolegadaProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("QuantidadeProduto")
                        .HasColumnType("int");

                    b.Property<string>("TamanhoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorUniProduto")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("VoltagemProduto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaModelId");

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaModelId = 1,
                            Cor = "Vermelho",
                            Estoque = 7,
                            Marca = "Apple",
                            Modelo = "Iphone 8",
                            Preco = 2600.00m,
                            QuantidadeProduto = 0,
                            ValorUniProduto = 0m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaModelId = 1,
                            Cor = "Branco",
                            Estoque = 4,
                            Marca = "Apple",
                            Modelo = "Iphone X",
                            Preco = 3100.00m,
                            QuantidadeProduto = 0,
                            ValorUniProduto = 0m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaModelId = 1,
                            Cor = "Preto",
                            Estoque = 1,
                            Marca = "Apple",
                            Modelo = "Iphone 11",
                            Preco = 4800.00m,
                            QuantidadeProduto = 0,
                            ValorUniProduto = 0m
                        });
                });

            modelBuilder.Entity("AvgApi.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Especialidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Especialidade = "Java",
                            Nome = "Pietra Rafaela Peixoto",
                            Telefone = "(31) 2881-5021"
                        },
                        new
                        {
                            Id = 2,
                            Especialidade = "Sistemas Operacionais",
                            Nome = "Alessandra Elisa Luzia da Silva",
                            Telefone = "(96) 2778-0600"
                        },
                        new
                        {
                            Id = 3,
                            Especialidade = "C#",
                            Nome = "Levi Nathan Moura",
                            Telefone = "(73) 3722-7286"
                        });
                });

            modelBuilder.Entity("AvgApi.Models.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRecebimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoExtra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontePagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoReceitaId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorExtra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorMedia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorMensal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TipoReceitaId");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("AvgApi.Models.ResumoReceitaDespesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DespesaId")
                        .HasColumnType("int");

                    b.Property<int>("InvestimentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Porcentagem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PorcentagemDespesa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PorcentagemInvestimento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PorcentagemReceita")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PorcentagemTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorMedia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorMensal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DespesaId");

                    b.HasIndex("InvestimentoId");

                    b.HasIndex("ReceitaId");

                    b.ToTable("ResumoReceitaDespesa");
                });

            modelBuilder.Entity("AvgApi.Models.TipoDespesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDespesa");
                });

            modelBuilder.Entity("AvgApi.Models.TipoInvestimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoIvestimento");
                });

            modelBuilder.Entity("AvgApi.Models.TipoReceita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoReceita");
                });

            modelBuilder.Entity("AvgApi.Models.Despesa", b =>
                {
                    b.HasOne("AvgApi.Models.TipoDespesa", "TipoDespesa")
                        .WithMany("Despesas")
                        .HasForeignKey("TipoDespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDespesa");
                });

            modelBuilder.Entity("AvgApi.Models.Investimento", b =>
                {
                    b.HasOne("AvgApi.Models.TipoInvestimento", "TipoInvestimento")
                        .WithMany("Investimentos")
                        .HasForeignKey("TipoInvestimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoInvestimento");
                });

            modelBuilder.Entity("AvgApi.Models.ProdutoModel", b =>
                {
                    b.HasOne("AvgApi.Models.CategoriaModel", "CategoriaModels")
                        .WithMany("ProdutoModels")
                        .HasForeignKey("CategoriaModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaModels");
                });

            modelBuilder.Entity("AvgApi.Models.Receita", b =>
                {
                    b.HasOne("AvgApi.Models.TipoReceita", "TipoReceita")
                        .WithMany("Receitas")
                        .HasForeignKey("TipoReceitaId");

                    b.Navigation("TipoReceita");
                });

            modelBuilder.Entity("AvgApi.Models.ResumoReceitaDespesa", b =>
                {
                    b.HasOne("AvgApi.Models.Despesa", "Despesa")
                        .WithMany("ResumoReceitaDespesas")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvgApi.Models.Investimento", "Investimento")
                        .WithMany("ResumoReceitaDespesas")
                        .HasForeignKey("InvestimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvgApi.Models.Receita", "Receita")
                        .WithMany("ResumoReceitaDespesas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Despesa");

                    b.Navigation("Investimento");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("AvgApi.Models.CategoriaModel", b =>
                {
                    b.Navigation("ProdutoModels");
                });

            modelBuilder.Entity("AvgApi.Models.Despesa", b =>
                {
                    b.Navigation("ResumoReceitaDespesas");
                });

            modelBuilder.Entity("AvgApi.Models.Investimento", b =>
                {
                    b.Navigation("ResumoReceitaDespesas");
                });

            modelBuilder.Entity("AvgApi.Models.Receita", b =>
                {
                    b.Navigation("ResumoReceitaDespesas");
                });

            modelBuilder.Entity("AvgApi.Models.TipoDespesa", b =>
                {
                    b.Navigation("Despesas");
                });

            modelBuilder.Entity("AvgApi.Models.TipoInvestimento", b =>
                {
                    b.Navigation("Investimentos");
                });

            modelBuilder.Entity("AvgApi.Models.TipoReceita", b =>
                {
                    b.Navigation("Receitas");
                });
#pragma warning restore 612, 618
        }
    }
}
